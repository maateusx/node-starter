const app = require('../app');
const debug = require('debug')('server');
const http = require('http');

//Normalize a port into number, string or false
const normalizePort = (val) => {
  var port = parseInt(val, 10);

  if (isNaN(port)) return val;
  if (port >= 0) return port;
  
  return false;
}

//Sweet message of error
const onError = (error) => {
  if (error.syscall !== 'listen') throw error;

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

const onListening = () => {
  console.log('HTTPSserver listening on port ' + port)
}

const port = normalizePort('3000');
app.set('port', port);

const serverHTTP = http.createServer(app);
serverHTTP.listen(port);
serverHTTP.on('error', onError);
serverHTTP.on('listening', onListening);